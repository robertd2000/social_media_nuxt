generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id           Int            @id @default(autoincrement())
  email        String
  name         String?
  username     String         @unique
  password     String
  profileImage String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  refreshToken RefreshToken[]
  tweet        Tweet[]
  mediaFiles   MediaFile[]
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model Tweet {
  id         Int         @id @default(autoincrement())
  text       String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  author     User        @relation(fields: [authorId], references: [id])
  authorId   Int
  replyToId  Int?
  replyTo    Tweet?      @relation("replies", fields: [replyToId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  replies    Tweet[]     @relation("replies")
  mediaFiles MediaFile[]
}

model MediaFile {
  id               Int      @id @default(autoincrement())
  url              String
  providerPublicId String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation(fields: [userId], references: [id])
  userId           Int
  tweet            Tweet?   @relation(fields: [tweetId], references: [id])
  tweetId          Int?
}
